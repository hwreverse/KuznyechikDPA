00000000 W __heap_end
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 W __vector_default
00000000 T __vectors
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000006 A __FUSE_REGION_LENGTH__
00000016 a B
00000017 a A
00000018 a P
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
000001c8 T __trampolines_start
000001dc T __trampolines_end
000001dc T rc_tab
000001e6 T aes_sbox
000002e6 T __ctors_end
000002e6 T __ctors_start
000002e6 T __dtors_end
000002e6 T __dtors_start
000002e6 W __init
000002f6 T __do_copy_data
00000310 T __do_clear_bss
00000318 t .do_clear_bss_loop
0000031a t .do_clear_bss_start
00000328 T __bad_interrupt
00000328 W __vector_1
00000328 W __vector_10
00000328 W __vector_100
00000328 W __vector_101
00000328 W __vector_102
00000328 W __vector_103
00000328 W __vector_104
00000328 W __vector_105
00000328 W __vector_106
00000328 W __vector_107
00000328 W __vector_108
00000328 W __vector_109
00000328 W __vector_11
00000328 W __vector_110
00000328 W __vector_111
00000328 W __vector_112
00000328 W __vector_113
00000328 W __vector_12
00000328 W __vector_13
00000328 W __vector_14
00000328 W __vector_15
00000328 W __vector_16
00000328 W __vector_17
00000328 W __vector_18
00000328 W __vector_19
00000328 W __vector_2
00000328 W __vector_20
00000328 W __vector_21
00000328 W __vector_22
00000328 W __vector_23
00000328 W __vector_24
00000328 W __vector_25
00000328 W __vector_26
00000328 W __vector_27
00000328 W __vector_28
00000328 W __vector_29
00000328 W __vector_3
00000328 W __vector_30
00000328 W __vector_31
00000328 W __vector_32
00000328 W __vector_33
00000328 W __vector_34
00000328 W __vector_35
00000328 W __vector_36
00000328 W __vector_37
00000328 W __vector_38
00000328 W __vector_39
00000328 W __vector_4
00000328 W __vector_40
00000328 W __vector_41
00000328 W __vector_42
00000328 W __vector_43
00000328 W __vector_44
00000328 W __vector_45
00000328 W __vector_46
00000328 W __vector_47
00000328 W __vector_48
00000328 W __vector_49
00000328 W __vector_5
00000328 W __vector_50
00000328 W __vector_51
00000328 W __vector_52
00000328 W __vector_53
00000328 W __vector_54
00000328 W __vector_55
00000328 W __vector_56
00000328 W __vector_57
00000328 W __vector_58
00000328 W __vector_59
00000328 W __vector_6
00000328 W __vector_60
00000328 W __vector_61
00000328 W __vector_62
00000328 W __vector_63
00000328 W __vector_64
00000328 W __vector_65
00000328 W __vector_66
00000328 W __vector_67
00000328 W __vector_68
00000328 W __vector_69
00000328 W __vector_7
00000328 W __vector_70
00000328 W __vector_71
00000328 W __vector_72
00000328 W __vector_73
00000328 W __vector_74
00000328 W __vector_75
00000328 W __vector_76
00000328 W __vector_77
00000328 W __vector_78
00000328 W __vector_79
00000328 W __vector_8
00000328 W __vector_80
00000328 W __vector_81
00000328 W __vector_82
00000328 W __vector_83
00000328 W __vector_84
00000328 W __vector_85
00000328 W __vector_86
00000328 W __vector_87
00000328 W __vector_88
00000328 W __vector_89
00000328 W __vector_9
00000328 W __vector_90
00000328 W __vector_91
00000328 W __vector_92
00000328 W __vector_93
00000328 W __vector_94
00000328 W __vector_95
00000328 W __vector_96
00000328 W __vector_97
00000328 W __vector_98
00000328 W __vector_99
0000032c T reset
00000330 T get_key
00000338 T get_pt
00000372 T get_dc
000003ac t maskState
000003ce t AddRoundKey
00000400 A __LOCK_REGION_LENGTH__
00000400 A __SIGNATURE_REGION_LENGTH__
00000400 A __USER_SIGNATURE_REGION_LENGTH__
00000400 t genMask
00000434 T kuznyechik_setkey
00000850 T masked_kuznyechik_crypto
00000c8e T masked_kuznyechik_decrypto
000010a8 T check_version
000010ac T hex_decode
00001136 T simpleserial_addcmd
0000117c T simpleserial_init
0000118a T simpleserial_put
000011f2 T simpleserial_get
0000130e T init_uart0
00001336 T input_ch_w_timeout_0
0000137a T input_ch_0
00001388 T output_ch_0
00001396 T USART_InterruptDriver_Initialize
000013a8 T USART_InterruptDriver_DreInterruptLevel_Set
000013ae T USART_TXBuffer_FreeSpace
000013c2 T USART_TXBuffer_PutByte
000013fa T USART_RXBufferData_Available
0000140a T USART_RXBuffer_GetByte
00001422 T USART_RXComplete
0000144c T USART_DataRegEmpty
00001486 T USART_NineBits_PutChar
0000149a T USART_NineBits_GetChar
000014b0 T platform_init
000014e6 T aes_indep_init
000014e8 T aes_indep_key
000014f0 T aes_indep_enc
000014f8 T aes_indep_mask
000014fa T aes_shiftcol
00001598 T aes_encrypt_core
00001798 T aes_init
000018e6 T aes128_init
000018f0 T aes192_init
000018fa T aes256_init
00001904 T aes128_enc
0000190a T gf256mul
00001924 T main
000019c0 t do_rand
00001a52 T rand_r
00001a56 T rand
00001a5e T srand
00001a74 T memcpy
00001a86 T __divmodsi4
00001aa4 t __divmodsi4_neg2
00001ab2 t __divmodsi4_exit
00001ab4 T __negsi2
00001ac4 T __muluhisi3
00001ada T __mulshisi3
00001ae0 T __mulohisi3
00001aea T __udivmodsi4
00001af6 t __udivmodsi4_loop
00001b10 t __udivmodsi4_ep
00001b2e T __umulhisi3
00001b4c T _exit
00001b4c W exit
00001b4e t __stop_program
00001b50 A __data_load_start
00001b50 T _etext
00002824 A __data_load_end
00003fff W __stack
0000ffa0 A __DATA_REGION_LENGTH__
00010000 A __EEPROM_REGION_LENGTH__
00100000 A __TEXT_REGION_LENGTH__
00802000 D __data_start
00802000 D rsbox
00802100 D sbox
00802200 d trueRoundKey
008022a0 d next
008022c4 d C
008024c4 d mult_mod_poly
00802cc4 d hex_lookup
00802cd4 B __bss_start
00802cd4 D __data_end
00802cd4 D _edata
00802cd4 b Key
00802cd6 b RoundKey
008030f6 b mask
00803106 b stateDuringKS
00803116 b state
00803118 b num_commands
0080311a b commands
0080314c B ctx
008031fc B __bss_end
008031fc N _end
00810000 N __eeprom_end
