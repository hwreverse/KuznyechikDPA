   1               		.file	"simpleserial-kuznyechik.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               	.global	reset
  14               	reset:
  15               	.LFB14:
  16               		.file 1 "simpleserial-kuznyechik.c"
   1:simpleserial-kuznyechik.c **** #include "kuznyechik.h"
   2:simpleserial-kuznyechik.c **** #include "hal.h"
   3:simpleserial-kuznyechik.c **** #include "simpleserial.h"
   4:simpleserial-kuznyechik.c **** #include <stdint.h>
   5:simpleserial-kuznyechik.c **** #include <stdlib.h>
   6:simpleserial-kuznyechik.c **** 
   7:simpleserial-kuznyechik.c **** uint8_t get_key(uint8_t* k)
   8:simpleserial-kuznyechik.c **** {
   9:simpleserial-kuznyechik.c **** 	kuznyechik_setkey(k);
  10:simpleserial-kuznyechik.c **** 	return 0x00;
  11:simpleserial-kuznyechik.c **** }
  12:simpleserial-kuznyechik.c **** 
  13:simpleserial-kuznyechik.c **** uint8_t get_pt(uint8_t* pt)
  14:simpleserial-kuznyechik.c **** {
  15:simpleserial-kuznyechik.c **** 	trigger_high();
  16:simpleserial-kuznyechik.c **** 	kuznyechik_crypto(pt); /* encrypting the data block */
  17:simpleserial-kuznyechik.c **** 	trigger_low();
  18:simpleserial-kuznyechik.c **** 	simpleserial_put('r', 16, pt);
  19:simpleserial-kuznyechik.c **** 	return 0x00;
  20:simpleserial-kuznyechik.c **** }
  21:simpleserial-kuznyechik.c **** 
  22:simpleserial-kuznyechik.c **** uint8_t get_dc(uint8_t* pt)
  23:simpleserial-kuznyechik.c **** {
  24:simpleserial-kuznyechik.c ****     trigger_high();
  25:simpleserial-kuznyechik.c ****     kuznyechik_decrypto(pt);
  26:simpleserial-kuznyechik.c ****     trigger_low();
  27:simpleserial-kuznyechik.c ****     simpleserial_put('r', 16, pt);
  28:simpleserial-kuznyechik.c ****     return 0x00;
  29:simpleserial-kuznyechik.c **** }
  30:simpleserial-kuznyechik.c **** 
  31:simpleserial-kuznyechik.c **** uint8_t reset(uint8_t* x)
  32:simpleserial-kuznyechik.c **** {
  17               		.loc 1 32 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  33:simpleserial-kuznyechik.c ****     // Reset key here if needed
  34:simpleserial-kuznyechik.c **** 	return 0x00;
  35:simpleserial-kuznyechik.c **** }
  24               		.loc 1 35 0
  25 0000 80E0      		ldi r24,0
  26               	.LVL1:
  27 0002 0895      		ret
  28               		.cfi_endproc
  29               	.LFE14:
  31               	.global	get_key
  33               	get_key:
  34               	.LFB11:
   8:simpleserial-kuznyechik.c **** 	kuznyechik_setkey(k);
  35               		.loc 1 8 0
  36               		.cfi_startproc
  37               	.LVL2:
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 0 */
  41               	.L__stack_usage = 0
   9:simpleserial-kuznyechik.c **** 	return 0x00;
  42               		.loc 1 9 0
  43 0004 0E94 0000 		call kuznyechik_setkey
  44               	.LVL3:
  11:simpleserial-kuznyechik.c **** 
  45               		.loc 1 11 0
  46 0008 80E0      		ldi r24,0
  47 000a 0895      		ret
  48               		.cfi_endproc
  49               	.LFE11:
  51               	.global	get_pt
  53               	get_pt:
  54               	.LFB12:
  14:simpleserial-kuznyechik.c **** 	trigger_high();
  55               		.loc 1 14 0
  56               		.cfi_startproc
  57               	.LVL4:
  58 000c FF92      		push r15
  59               	.LCFI0:
  60               		.cfi_def_cfa_offset 4
  61               		.cfi_offset 15, -3
  62 000e 0F93      		push r16
  63               	.LCFI1:
  64               		.cfi_def_cfa_offset 5
  65               		.cfi_offset 16, -4
  66 0010 1F93      		push r17
  67               	.LCFI2:
  68               		.cfi_def_cfa_offset 6
  69               		.cfi_offset 17, -5
  70 0012 CF93      		push r28
  71               	.LCFI3:
  72               		.cfi_def_cfa_offset 7
  73               		.cfi_offset 28, -6
  74 0014 DF93      		push r29
  75               	.LCFI4:
  76               		.cfi_def_cfa_offset 8
  77               		.cfi_offset 29, -7
  78               	/* prologue: function */
  79               	/* frame size = 0 */
  80               	/* stack size = 5 */
  81               	.L__stack_usage = 5
  82 0016 EC01      		movw r28,r24
  15:simpleserial-kuznyechik.c **** 	kuznyechik_crypto(pt); /* encrypting the data block */
  83               		.loc 1 15 0
  84 0018 00E0      		ldi r16,0
  85 001a 16E0      		ldi r17,lo8(6)
  86 001c FF24      		clr r15
  87 001e F394      		inc r15
  88 0020 F801      		movw r30,r16
  89 0022 F582      		std Z+5,r15
  16:simpleserial-kuznyechik.c **** 	trigger_low();
  90               		.loc 1 16 0
  91 0024 0E94 0000 		call kuznyechik_crypto
  92               	.LVL5:
  17:simpleserial-kuznyechik.c **** 	simpleserial_put('r', 16, pt);
  93               		.loc 1 17 0
  94 0028 F801      		movw r30,r16
  95 002a F682      		std Z+6,r15
  18:simpleserial-kuznyechik.c **** 	return 0x00;
  96               		.loc 1 18 0
  97 002c AE01      		movw r20,r28
  98 002e 60E1      		ldi r22,lo8(16)
  99 0030 70E0      		ldi r23,0
 100 0032 82E7      		ldi r24,lo8(114)
 101 0034 0E94 0000 		call simpleserial_put
 102               	.LVL6:
  20:simpleserial-kuznyechik.c **** 
 103               		.loc 1 20 0
 104 0038 80E0      		ldi r24,0
 105               	/* epilogue start */
 106 003a DF91      		pop r29
 107 003c CF91      		pop r28
 108               	.LVL7:
 109 003e 1F91      		pop r17
 110 0040 0F91      		pop r16
 111 0042 FF90      		pop r15
 112 0044 0895      		ret
 113               		.cfi_endproc
 114               	.LFE12:
 116               	.global	get_dc
 118               	get_dc:
 119               	.LFB13:
  23:simpleserial-kuznyechik.c ****     trigger_high();
 120               		.loc 1 23 0
 121               		.cfi_startproc
 122               	.LVL8:
 123 0046 FF92      		push r15
 124               	.LCFI5:
 125               		.cfi_def_cfa_offset 4
 126               		.cfi_offset 15, -3
 127 0048 0F93      		push r16
 128               	.LCFI6:
 129               		.cfi_def_cfa_offset 5
 130               		.cfi_offset 16, -4
 131 004a 1F93      		push r17
 132               	.LCFI7:
 133               		.cfi_def_cfa_offset 6
 134               		.cfi_offset 17, -5
 135 004c CF93      		push r28
 136               	.LCFI8:
 137               		.cfi_def_cfa_offset 7
 138               		.cfi_offset 28, -6
 139 004e DF93      		push r29
 140               	.LCFI9:
 141               		.cfi_def_cfa_offset 8
 142               		.cfi_offset 29, -7
 143               	/* prologue: function */
 144               	/* frame size = 0 */
 145               	/* stack size = 5 */
 146               	.L__stack_usage = 5
 147 0050 EC01      		movw r28,r24
  24:simpleserial-kuznyechik.c ****     kuznyechik_decrypto(pt);
 148               		.loc 1 24 0
 149 0052 00E0      		ldi r16,0
 150 0054 16E0      		ldi r17,lo8(6)
 151 0056 FF24      		clr r15
 152 0058 F394      		inc r15
 153 005a F801      		movw r30,r16
 154 005c F582      		std Z+5,r15
  25:simpleserial-kuznyechik.c ****     trigger_low();
 155               		.loc 1 25 0
 156 005e 0E94 0000 		call kuznyechik_decrypto
 157               	.LVL9:
  26:simpleserial-kuznyechik.c ****     simpleserial_put('r', 16, pt);
 158               		.loc 1 26 0
 159 0062 F801      		movw r30,r16
 160 0064 F682      		std Z+6,r15
  27:simpleserial-kuznyechik.c ****     return 0x00;
 161               		.loc 1 27 0
 162 0066 AE01      		movw r20,r28
 163 0068 60E1      		ldi r22,lo8(16)
 164 006a 70E0      		ldi r23,0
 165 006c 82E7      		ldi r24,lo8(114)
 166 006e 0E94 0000 		call simpleserial_put
 167               	.LVL10:
  29:simpleserial-kuznyechik.c **** 
 168               		.loc 1 29 0
 169 0072 80E0      		ldi r24,0
 170               	/* epilogue start */
 171 0074 DF91      		pop r29
 172 0076 CF91      		pop r28
 173               	.LVL11:
 174 0078 1F91      		pop r17
 175 007a 0F91      		pop r16
 176 007c FF90      		pop r15
 177 007e 0895      		ret
 178               		.cfi_endproc
 179               	.LFE13:
 181               	.global	fubar
 183               	fubar:
 184               	.LFB15:
  36:simpleserial-kuznyechik.c **** 
  37:simpleserial-kuznyechik.c **** uint8_t fubar(uint8_t* x)
  38:simpleserial-kuznyechik.c **** {
 185               		.loc 1 38 0
 186               		.cfi_startproc
 187               	.LVL12:
 188               	/* prologue: function */
 189               	/* frame size = 0 */
 190               	/* stack size = 0 */
 191               	.L__stack_usage = 0
  39:simpleserial-kuznyechik.c ****     putch('f');
 192               		.loc 1 39 0
 193 0080 86E6      		ldi r24,lo8(102)
 194               	.LVL13:
 195 0082 0E94 0000 		call output_ch_0
 196               	.LVL14:
  40:simpleserial-kuznyechik.c ****     putch('u');
 197               		.loc 1 40 0
 198 0086 85E7      		ldi r24,lo8(117)
 199 0088 0E94 0000 		call output_ch_0
 200               	.LVL15:
  41:simpleserial-kuznyechik.c ****     putch('b');
 201               		.loc 1 41 0
 202 008c 82E6      		ldi r24,lo8(98)
 203 008e 0E94 0000 		call output_ch_0
 204               	.LVL16:
  42:simpleserial-kuznyechik.c ****     putch('a');
 205               		.loc 1 42 0
 206 0092 81E6      		ldi r24,lo8(97)
 207 0094 0E94 0000 		call output_ch_0
 208               	.LVL17:
  43:simpleserial-kuznyechik.c ****     putch('r');
 209               		.loc 1 43 0
 210 0098 82E7      		ldi r24,lo8(114)
 211 009a 0E94 0000 		call output_ch_0
 212               	.LVL18:
  44:simpleserial-kuznyechik.c ****     putch('\n');
 213               		.loc 1 44 0
 214 009e 8AE0      		ldi r24,lo8(10)
 215 00a0 0E94 0000 		call output_ch_0
 216               	.LVL19:
  45:simpleserial-kuznyechik.c **** 	return 0x00;
  46:simpleserial-kuznyechik.c **** }
 217               		.loc 1 46 0
 218 00a4 80E0      		ldi r24,0
 219 00a6 0895      		ret
 220               		.cfi_endproc
 221               	.LFE15:
 223               		.section	.rodata
 224               	.LC0:
 225 0000 88        		.byte	-120
 226 0001 99        		.byte	-103
 227 0002 AA        		.byte	-86
 228 0003 BB        		.byte	-69
 229 0004 CC        		.byte	-52
 230 0005 DD        		.byte	-35
 231 0006 EE        		.byte	-18
 232 0007 FF        		.byte	-1
 233 0008 00        		.byte	0
 234 0009 11        		.byte	17
 235 000a 22        		.byte	34
 236 000b 33        		.byte	51
 237 000c 44        		.byte	68
 238 000d 55        		.byte	85
 239 000e 66        		.byte	102
 240 000f 77        		.byte	119
 241 0010 FE        		.byte	-2
 242 0011 DC        		.byte	-36
 243 0012 BA        		.byte	-70
 244 0013 98        		.byte	-104
 245 0014 76        		.byte	118
 246 0015 54        		.byte	84
 247 0016 32        		.byte	50
 248 0017 10        		.byte	16
 249 0018 01        		.byte	1
 250 0019 23        		.byte	35
 251 001a 45        		.byte	69
 252 001b 67        		.byte	103
 253 001c 89        		.byte	-119
 254 001d AB        		.byte	-85
 255 001e CD        		.byte	-51
 256 001f EF        		.byte	-17
 257               		.section	.text.startup,"ax",@progbits
 258               	.global	main
 260               	main:
 261               	.LFB16:
  47:simpleserial-kuznyechik.c **** int main(void)
  48:simpleserial-kuznyechik.c **** {
 262               		.loc 1 48 0
 263               		.cfi_startproc
 264 0000 CF93      		push r28
 265               	.LCFI10:
 266               		.cfi_def_cfa_offset 4
 267               		.cfi_offset 28, -3
 268 0002 DF93      		push r29
 269               	.LCFI11:
 270               		.cfi_def_cfa_offset 5
 271               		.cfi_offset 29, -4
 272 0004 CDB7      		in r28,__SP_L__
 273 0006 DEB7      		in r29,__SP_H__
 274               	.LCFI12:
 275               		.cfi_def_cfa_register 28
 276 0008 A097      		sbiw r28,32
 277               	.LCFI13:
 278               		.cfi_def_cfa_offset 37
 279 000a CDBF      		out __SP_L__,r28
 280 000c DEBF      		out __SP_H__,r29
 281               	/* prologue: function */
 282               	/* frame size = 32 */
 283               	/* stack size = 34 */
 284               	.L__stack_usage = 34
  49:simpleserial-kuznyechik.c **** 	uint8_t tmp[32] = {0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff, 0x00, 0x11, 0x22, 0x33, 0x44, 0
 285               		.loc 1 49 0
 286 000e 80E2      		ldi r24,lo8(32)
 287 0010 E0E0      		ldi r30,lo8(.LC0)
 288 0012 F0E0      		ldi r31,hi8(.LC0)
 289 0014 DE01      		movw r26,r28
 290 0016 1196      		adiw r26,1
 291               		0:
 292 0018 0190      		ld r0,Z+
 293 001a 0D92      		st X+,r0
 294 001c 8A95      		dec r24
 295 001e 01F4      		brne 0b
  50:simpleserial-kuznyechik.c **** 
  51:simpleserial-kuznyechik.c ****     platform_init();
 296               		.loc 1 51 0
 297 0020 0E94 0000 		call platform_init
 298               	.LVL20:
  52:simpleserial-kuznyechik.c ****     init_uart();
 299               		.loc 1 52 0
 300 0024 0E94 0000 		call init_uart0
 301               	.LVL21:
  53:simpleserial-kuznyechik.c ****     trigger_setup();
 302               		.loc 1 53 0
 303 0028 81E0      		ldi r24,lo8(1)
 304 002a 8093 0106 		sts 1537,r24
  54:simpleserial-kuznyechik.c **** 
  55:simpleserial-kuznyechik.c **** 	kuznyechik_setkey((uint8_t*) tmp);
 305               		.loc 1 55 0
 306 002e CE01      		movw r24,r28
 307 0030 0196      		adiw r24,1
 308 0032 0E94 0000 		call kuznyechik_setkey
 309               	.LVL22:
  56:simpleserial-kuznyechik.c **** 
  57:simpleserial-kuznyechik.c ****     /* Uncomment this to get a HELLO message for debug */
  58:simpleserial-kuznyechik.c ****     
  59:simpleserial-kuznyechik.c ****     putch('h');
 310               		.loc 1 59 0
 311 0036 88E6      		ldi r24,lo8(104)
 312 0038 0E94 0000 		call output_ch_0
 313               	.LVL23:
  60:simpleserial-kuznyechik.c ****     putch('e');
 314               		.loc 1 60 0
 315 003c 85E6      		ldi r24,lo8(101)
 316 003e 0E94 0000 		call output_ch_0
 317               	.LVL24:
  61:simpleserial-kuznyechik.c ****     putch('l');
 318               		.loc 1 61 0
 319 0042 8CE6      		ldi r24,lo8(108)
 320 0044 0E94 0000 		call output_ch_0
 321               	.LVL25:
  62:simpleserial-kuznyechik.c ****     putch('l');
 322               		.loc 1 62 0
 323 0048 8CE6      		ldi r24,lo8(108)
 324 004a 0E94 0000 		call output_ch_0
 325               	.LVL26:
  63:simpleserial-kuznyechik.c ****     putch('o');
 326               		.loc 1 63 0
 327 004e 8FE6      		ldi r24,lo8(111)
 328 0050 0E94 0000 		call output_ch_0
 329               	.LVL27:
  64:simpleserial-kuznyechik.c ****     putch('\n');
 330               		.loc 1 64 0
 331 0054 8AE0      		ldi r24,lo8(10)
 332 0056 0E94 0000 		call output_ch_0
 333               	.LVL28:
  65:simpleserial-kuznyechik.c ****     
  66:simpleserial-kuznyechik.c **** 	
  67:simpleserial-kuznyechik.c ****     simpleserial_init();
 334               		.loc 1 67 0
 335 005a 0E94 0000 		call simpleserial_init
 336               	.LVL29:
  68:simpleserial-kuznyechik.c ****     simpleserial_addcmd('k', 32, get_key);
 337               		.loc 1 68 0
 338 005e 40E0      		ldi r20,lo8(gs(get_key))
 339 0060 50E0      		ldi r21,hi8(gs(get_key))
 340 0062 60E2      		ldi r22,lo8(32)
 341 0064 70E0      		ldi r23,0
 342 0066 8BE6      		ldi r24,lo8(107)
 343 0068 0E94 0000 		call simpleserial_addcmd
 344               	.LVL30:
  69:simpleserial-kuznyechik.c ****     simpleserial_addcmd('p', 16,  get_pt);
 345               		.loc 1 69 0
 346 006c 40E0      		ldi r20,lo8(gs(get_pt))
 347 006e 50E0      		ldi r21,hi8(gs(get_pt))
 348 0070 60E1      		ldi r22,lo8(16)
 349 0072 70E0      		ldi r23,0
 350 0074 80E7      		ldi r24,lo8(112)
 351 0076 0E94 0000 		call simpleserial_addcmd
 352               	.LVL31:
  70:simpleserial-kuznyechik.c ****     simpleserial_addcmd('d', 16,  get_dc);
 353               		.loc 1 70 0
 354 007a 40E0      		ldi r20,lo8(gs(get_dc))
 355 007c 50E0      		ldi r21,hi8(gs(get_dc))
 356 007e 60E1      		ldi r22,lo8(16)
 357 0080 70E0      		ldi r23,0
 358 0082 84E6      		ldi r24,lo8(100)
 359 0084 0E94 0000 		call simpleserial_addcmd
 360               	.LVL32:
  71:simpleserial-kuznyechik.c ****     simpleserial_addcmd('x',  0,   reset);
 361               		.loc 1 71 0
 362 0088 40E0      		ldi r20,lo8(gs(reset))
 363 008a 50E0      		ldi r21,hi8(gs(reset))
 364 008c 60E0      		ldi r22,0
 365 008e 70E0      		ldi r23,0
 366 0090 88E7      		ldi r24,lo8(120)
 367 0092 0E94 0000 		call simpleserial_addcmd
 368               	.LVL33:
  72:simpleserial-kuznyechik.c ****     simpleserial_addcmd('f',  0,   fubar); //here was alexx
 369               		.loc 1 72 0
 370 0096 40E0      		ldi r20,lo8(gs(fubar))
 371 0098 50E0      		ldi r21,hi8(gs(fubar))
 372 009a 60E0      		ldi r22,0
 373 009c 70E0      		ldi r23,0
 374 009e 86E6      		ldi r24,lo8(102)
 375 00a0 0E94 0000 		call simpleserial_addcmd
 376               	.LVL34:
 377               	.L7:
  73:simpleserial-kuznyechik.c ****     //simpleserial_addcmd('m', 18, get_mask);
  74:simpleserial-kuznyechik.c ****     while(1)
  75:simpleserial-kuznyechik.c ****         simpleserial_get();
 378               		.loc 1 75 0 discriminator 1
 379 00a4 0E94 0000 		call simpleserial_get
 380               	.LVL35:
 381 00a8 00C0      		rjmp .L7
 382               		.cfi_endproc
 383               	.LFE16:
 385               		.text
 386               	.Letext0:
 387               		.file 2 "o:\\avr8\\avr\\include\\stdint.h"
 388               		.file 3 "o:\\avr8\\avr\\include\\avr\\iox128d3.h"
 389               		.file 4 "kuznyechik.h"
 390               		.file 5 ".././simpleserial/simpleserial.h"
 391               		.file 6 ".././hal/xmega/uart.h"
 392               		.file 7 ".././hal/hal.h"
DEFINED SYMBOLS
                            *ABS*:00000000 simpleserial-kuznyechik.c
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:2      *ABS*:0000003e __SP_H__
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:3      *ABS*:0000003d __SP_L__
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:4      *ABS*:0000003f __SREG__
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:6      *ABS*:00000034 __CCP__
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:7      *ABS*:00000000 __tmp_reg__
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:8      *ABS*:00000001 __zero_reg__
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:14     .text:00000000 reset
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:33     .text:00000004 get_key
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:53     .text:0000000c get_pt
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:118    .text:00000046 get_dc
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:183    .text:00000080 fubar
C:\Users\alexx\AppData\Local\Temp\ccJoTrn5.s:260    .text.startup:00000000 main

UNDEFINED SYMBOLS
kuznyechik_setkey
kuznyechik_crypto
simpleserial_put
kuznyechik_decrypto
output_ch_0
platform_init
init_uart0
simpleserial_init
simpleserial_addcmd
simpleserial_get
__do_copy_data
